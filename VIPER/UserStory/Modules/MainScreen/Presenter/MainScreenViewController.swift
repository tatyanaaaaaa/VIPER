//
//  MainScreenViewController.swift
//  VIPER
//
//  Created by Tatiana Sosina on 02.04.2022.
//

import UIKit

// –ù–∞–º –ø–æ–∫–∞ —ç—Ç–æ –Ω–µ –Ω–∞–¥–æ üî¥ üëá
/// —Å–æ–±—ã—Ç–∏—è –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º `–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–¥—É–ª—è –≤ –¥—Ä—É–≥–æ–π –º–æ–¥—É–ª—å`
public protocol MainScreenModuleOutput: AnyObject {
    
    /// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª `–ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç —ç–∫—Ä–∞–Ω–∞`
    /// - Parameters:
    ///   - color: `–¢–µ–∫—É—â–∏–π —Ü–≤–µ—Ç —ç–∫—Ä–∞–Ω–∞`
    func userPressedChange(color: UIColor?)
}

/// —Å–æ–±—ã—Ç–∏—è –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º `–∏–∑ –¥—Ä—É–≥–æ–≥–æ –º–æ–¥—É–ª—è –≤ —Ç–µ–∫—É—â–∏–π`
public protocol MainScreenModuleInput {
    
    /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –æ—Ç `–ì–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞`
    var moduleOutput: MainScreenModuleOutput? { get set }
}
// –ù–∞–º –ø–æ–∫–∞ —ç—Ç–æ –Ω–µ –Ω–∞–¥–æ üî¥ üëÜ

/// –ì–æ—Ç–æ–≤—ã–π –º–æ–¥—É–ª—å `–ì–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞`
public typealias MainScreenModule = UIViewController & MainScreenModuleInput

/// –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
final class MainScreenViewController: UIViewController, MainScreenModuleInput {
    
    // MARK: - Public property
    
    // –ù–∞–º –ø–æ–∫–∞ —ç—Ç–æ –Ω–µ –Ω–∞–¥–æ üî¥ üëá
    public weak var moduleOutput: MainScreenModuleOutput?
    // –ù–∞–º –ø–æ–∫–∞ —ç—Ç–æ –Ω–µ –Ω–∞–¥–æ üî¥ üëÜ
    
    // MARK: - Private property
    
    private let interactor: MainScreenInteractorInput
    private let moduleView: UIView & MainScreenViewInput
    private let factory: MainScreenFactoryInput
    
    /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
    /// - Parameters:
    ///   - interactor: –∏–Ω—Ç–µ—Ä–∞–∫—Ç–æ—Ä
    ///   - moduleView: –≤—å—é
    ///   - factory: —Ñ–∞–±—Ä–∏–∫–∞
    init(interactor: MainScreenInteractorInput,
         moduleView: UIView & MainScreenViewInput,
         factory: MainScreenFactoryInput) {
        self.interactor = interactor
        self.moduleView = moduleView
        self.factory = factory
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    // MARK: - Life cycle
    
    override func loadView() {
        view = moduleView
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        interactor.getContent()
        title = Appearance().title
    }
}

// MARK: - MainScreenInteractorOutput

extension MainScreenViewController: MainScreenInteractorOutput {
    func didReceive(text: String) {
        factory.createTitle(text: text)
    }
}

// MARK: - MainScreenViewOutput

extension MainScreenViewController: MainScreenViewOutput {
    func presentNewScreenButtonAction() {
        moduleView.changeBackgroundColor()
        moduleOutput?.userPressedChange(color: view.backgroundColor)
    }
}

// MARK: - MainScreenFactoryOutput

extension MainScreenViewController: MainScreenFactoryOutput {
    func didReciveFull(text: String) {
        moduleView.setTitle(text: text)
    }
}

// MARK: - Appearance

private extension MainScreenViewController {
    struct Appearance {
        let title = "VIPER –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞"
    }
}
